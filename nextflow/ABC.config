params{
  download{
    abc_git = "https://github.com/kadepettie/ABC-Enhancer-Gene-Prediction.git"
    abc_branch = "hichip"
    genrich_git = "https://github.com/jsh58/Genrich.git"
  }
  outdir = '140821output'
  mode = "all" // all

  git_dir = "/home/users/kpettie/code/github"
  abc_code = "${git_dir}/ABC-Enhancer-Gene-Prediction" // contains environment .yaml and src directory

  chrsize = "${abc_code}/reference/chr_sizes"
  chrsizebed = "${abc_code}/reference/chr_sizes.bed"
  blocklist = "${abc_code}/reference/wgEncodeHg19ConsensusSignalArtifactRegions.bed"
  promoters = "${abc_code}/reference/RefSeqCurated.170308.bed.CollapsedGeneBounds.TSS500bp.bed"
  genes = "${abc_code}/reference/RefSeqCurated.170308.bed.CollapsedGeneBounds.bed"
  ubiquitous = "${abc_code}/reference/UbiquitouslyExpressedGenesHG19.txt"
  // <hgnc_symbol>  <median_tpm> (for defining expressed genes in relevant cell type)
  expression = "${abc_code}/example_chr22/input_data/Expression/K562.ENCFF934YBO.TPM.txt"

  genrich_bin = "${git_dir}/Genrich"
  atac_bamdir = "" // if provided, overrides dhs_bamdir
  atac_glob = "" // exclude .bam suffix. Match multiple files with glob expression (e.g., {CEU,FIN,IBS,TSI,ESN,GWD,LWK,YRI}*), or single file explicitly
  dhs_bamdir = "/home/kpettie/nf_selection/abc/fromJesse"
  dhs_glob = "K562.ENCFF030DCL" // simpleName of these files will be written as cellType in output

  candidates_dir = "/home/kpettie/nf_selection/abc/fromJesse" // empty to call peaks and make candidates from provided bam file(s)
  candidates_glob = "joeCrisprTested.candidateRegions.bed"

  // hic bedpe format:    chr1 start1 end1 chr2 start2 end2 name count
  // hichip bedpe format: chr1 start1 end1 chr2 start2 end2 count
  hic_dir = "/home/kpettie/nf_selection/abc/fromJesse/hichip"
  hic_type = 'bedpe' // ['bedpe','juicebox']
  hichip = True // True if hic_dir contains hichip data (must be bedpe format)

  samcores = 16
}

process{
  module = 'anaconda/4.8'
  errorStrategy = 'finish'
  maxForks = 200
  stageInMode = 'rellink'
  withLabel: 'genrich'{
    module = 'anaconda/4.8'
    cpus = 1
    memory = '4G'
    time  = '8h'
  }
  withLabel: 'samtools'{
    module = 'samtools'
    cpus = 16
    memory = '48G'
    time  = '8h'
  }
  withLabel: 'ccres'{
    module = 'anaconda/4.8'
    cpus = 1
    memory = '4G'
    time  = '23h'
  }

}

executor{
  name = 'slurm'
  submitRateLimit = '1 sec'
  queueSize = 500
}

notification{
  enabled = true
  to = 'kpettie@stanford.edu'
}

timeline {
    enabled = true
    file = "./pipeline_info/timeline.html"
}

trace {
    enabled = true
    file = "./pipeline_info/trace.txt"
}

report {
    enabled = true
    file = "./pipeline_info/report.html"
}
